<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rdc.platform.java.mbg.mapper.ConfigDetailMapper">
  <resultMap id="BaseResultMap" type="rdc.platform.java.mbg.model.ConfigDetail">
    <id column="project_id" jdbcType="OTHER" property="projectId" />
    <id column="dir_id" jdbcType="INTEGER" property="dirId" />
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="template_id" jdbcType="INTEGER" property="templateId" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="detail" jdbcType="OTHER" property="detail" />
    <result column="sort" jdbcType="SMALLINT" property="sort" />
    <result column="template_updated" jdbcType="BOOLEAN" property="templateUpdated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    project_id, dir_id, id, template_id, "comment", detail, sort, template_updated
  </sql>
  <select id="selectByExample" parameterType="rdc.platform.java.mbg.model.ConfigDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from config_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--  TODO 获取外键关联的项目名称  -->
    select 
    <include refid="Base_Column_List" />
    from config_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from config_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="rdc.platform.java.mbg.model.ConfigDetailExample">
    delete from config_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="rdc.platform.java.mbg.model.ConfigDetail">
    insert into config_detail (project_id, dir_id, template_id,
      comment, detail, sort,template_updated
      )
    values (#{projectId}::uuid, #{dirId,jdbcType=INTEGER}#{templateId,jdbcType=INTEGER},
      #{comment,jdbcType=VARCHAR}, #{detail,jdbcType=OTHER,typeHandler=rdc.platform.java.common.handler.JsonTypeHandler}, #{sort,jdbcType=SMALLINT}, false
      )
  </insert>
  <insert id="insertSelective" parameterType="rdc.platform.java.mbg.model.ConfigDetail">
    insert into config_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="dirId != null">
        dir_id,
      </if>
      <if test="templateId != null">
        template_id,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="sort != null">
        sort,
      </if>
      template_updated
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId}::uuid,
      </if>
      <if test="dirId != null">
        #{dirId,jdbcType=INTEGER},
      </if>
      <if test="templateId != null">
        #{templateId,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=OTHER,typeHandler=rdc.platform.java.common.handler.JsonTypeHandler},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=SMALLINT},
      </if>
      false
    </trim>
  </insert>
  <select id="countByExample" parameterType="rdc.platform.java.mbg.model.ConfigDetailExample" resultType="java.lang.Integer">
    select count(*) from config_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update config_detail
    <set>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=OTHER},
      </if>
      <if test="record.dirId != null">
        dir_id = #{record.dirId,jdbcType=INTEGER},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.templateId != null">
        template_id = #{record.templateId,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=OTHER,typeHandler=rdc.platform.java.common.handler.JsonTypeHandler},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update config_detail
    set project_id = #{record.projectId,jdbcType=OTHER},
      dir_id = #{record.dirId,jdbcType=INTEGER},
      id = #{record.id,jdbcType=INTEGER},
      template_id = #{record.templateId,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=VARCHAR},
      detail = #{record.detail,jdbcType=OTHER,typeHandler=rdc.platform.java.common.handler.JsonTypeHandler},
      sort = #{record.sort,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKey" parameterType="rdc.platform.java.mbg.model.ConfigDetail">
    update config_detail
    set template_id = #{templateId,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=OTHER,typeHandler=rdc.platform.java.common.handler.JsonTypeHandler},
      sort = #{sort,jdbcType=SMALLINT},
      template_updated=false
    where project_id = #{projectId}::uuid
      and dir_id = #{dirId,jdbcType=INTEGER}
      and id = #{id,jdbcType=INTEGER}
  </update>
  <update id="setTemplateUpdated" parameterType="map">
      update config_detail
      set template_updated = #{templateUpdated, jdbcType=BOOLEAN}
      where project_id = #{detail.projectId}::uuid
      and dir_id = #{detail.dirId,jdbcType=INTEGER}
      and id = #{detail.id,jdbcType=INTEGER}
  </update>
</mapper>

